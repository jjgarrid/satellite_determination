-- -------------------------------------------------------------
-- 
-- File Name: PN_generator_TX\hdlsrc\PN_generatorV2\PN_genera_ip_tx_src_Transmisor.vhd
-- Created: 2020-05-30 21:58:06
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 0.000625
-- Target subsystem base rate: 0.000625
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out_1      0.000625
-- ce_out_0      0.01
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- Original_code                 ce_out_0      0.01
-- real_rsvd                     ce_out_1      0.000625
-- imaginary                     ce_out_1      0.000625
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: PN_genera_ip_tx_src_Transmisor
-- Source Path: PN_generatorV2/Transmisor
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY PN_genera_ip_tx_src_Transmisor IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        ce_out_0                          :   OUT   std_logic;
        ce_out_1                          :   OUT   std_logic;
        Original_code                     :   OUT   std_logic;
        real_rsvd                         :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        imaginary                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
        );
END PN_genera_ip_tx_src_Transmisor;


ARCHITECTURE rtl OF PN_genera_ip_tx_src_Transmisor IS

  -- Component Declarations
  COMPONENT PN_genera_ip_tx_src_Transmisor_tc
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          enb_1_1_1                       :   OUT   std_logic;
          enb_1_16_0                      :   OUT   std_logic;
          enb_1_16_1                      :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT PN_genera_ip_tx_src_Gold_Sequence_Generator
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_16_0                      :   IN    std_logic;
          Out1                            :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT PN_genera_ip_tx_src_BPSK_Modulator_Baseband
    PORT( in0                             :   IN    std_logic;
          out0_re                         :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          out0_im                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT PN_genera_ip_tx_src_Raised_Cosine_Transmit_Filter2
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_1_1                       :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT PN_genera_ip_tx_src_Raised_Cosine_Transmit_Filter3
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_1_1                       :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : PN_genera_ip_tx_src_Transmisor_tc
    USE ENTITY work.PN_genera_ip_tx_src_Transmisor_tc(rtl);

  FOR ALL : PN_genera_ip_tx_src_Gold_Sequence_Generator
    USE ENTITY work.PN_genera_ip_tx_src_Gold_Sequence_Generator(rtl);

  FOR ALL : PN_genera_ip_tx_src_BPSK_Modulator_Baseband
    USE ENTITY work.PN_genera_ip_tx_src_BPSK_Modulator_Baseband(rtl);

  FOR ALL : PN_genera_ip_tx_src_Raised_Cosine_Transmit_Filter2
    USE ENTITY work.PN_genera_ip_tx_src_Raised_Cosine_Transmit_Filter2(rtl);

  FOR ALL : PN_genera_ip_tx_src_Raised_Cosine_Transmit_Filter3
    USE ENTITY work.PN_genera_ip_tx_src_Raised_Cosine_Transmit_Filter3(rtl);

  -- Signals
  SIGNAL enb_1_1_1                        : std_logic;
  SIGNAL enb_1_16_1                       : std_logic;
  SIGNAL enb_1_16_0                       : std_logic;
  SIGNAL Original                         : std_logic;
  SIGNAL modulado_re                      : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL modulado_im                      : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL real_tmp                         : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL imaginary_tmp                    : std_logic_vector(15 DOWNTO 0);  -- ufix16

BEGIN
  -- upsample by 16
  -- 
  -- upsample by 16

  u_Transmisor_tc : PN_genera_ip_tx_src_Transmisor_tc
    PORT MAP( clk => clk,
              reset => reset,
              clk_enable => clk_enable,
              enb_1_1_1 => enb_1_1_1,
              enb_1_16_0 => enb_1_16_0,
              enb_1_16_1 => enb_1_16_1
              );

  u_Gold_Sequence_Generator : PN_genera_ip_tx_src_Gold_Sequence_Generator
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_16_0 => enb_1_16_0,
              Out1 => Original
              );

  u_BPSK_Modulator_Baseband : PN_genera_ip_tx_src_BPSK_Modulator_Baseband
    PORT MAP( in0 => Original,
              out0_re => modulado_re,  -- sfix16_En15
              out0_im => modulado_im  -- sfix16_En15
              );

  u_Raised_Cosine_Transmit_Filter2 : PN_genera_ip_tx_src_Raised_Cosine_Transmit_Filter2
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_1_1 => enb_1_1_1,
              In1 => modulado_re,  -- sfix16_En15
              Out1 => real_tmp  -- sfix16_En15
              );

  u_Raised_Cosine_Transmit_Filter3 : PN_genera_ip_tx_src_Raised_Cosine_Transmit_Filter3
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_1_1 => enb_1_1_1,
              In1 => modulado_im,  -- sfix16_En15
              Out1 => imaginary_tmp  -- sfix16_En15
              );

  ce_out_0 <= enb_1_16_1;

  ce_out_1 <= enb_1_1_1;

  Original_code <= Original;

  real_rsvd <= real_tmp;

  imaginary <= imaginary_tmp;

END rtl;

