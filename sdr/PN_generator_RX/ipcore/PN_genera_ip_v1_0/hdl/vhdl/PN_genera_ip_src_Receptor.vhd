-- -------------------------------------------------------------
-- 
-- File Name: PN_generator_RX\hdlsrc\PN_generatorV2\PN_genera_ip_src_Receptor.vhd
-- Created: 2020-05-30 20:12:39
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 0.000625
-- Target subsystem base rate: 0.000625
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        0.01
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- Salida_bits                   ce_out        0.01
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: PN_genera_ip_src_Receptor
-- Source Path: PN_generatorV2/Receptor
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY PN_genera_ip_src_Receptor IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        real_rsvd                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        imaginary                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        ce_out                            :   OUT   std_logic;
        Salida_bits                       :   OUT   std_logic
        );
END PN_genera_ip_src_Receptor;


ARCHITECTURE rtl OF PN_genera_ip_src_Receptor IS

  -- Component Declarations
  COMPONENT PN_genera_ip_src_Receptor_tc
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          enb_1_1_1                       :   OUT   std_logic;
          enb_1_16_1                      :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT PN_genera_ip_src_Raised_Cosine_Receive_Filter
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_1_1                       :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT PN_genera_ip_src_Raised_Cosine_Receive_Filter1
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_1_1                       :   IN    std_logic;
          In1                             :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          Out1                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  COMPONENT PN_genera_ip_src_BPSK_Demodulator_Baseband
    PORT( in0_re                          :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          in0_im                          :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          out0                            :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : PN_genera_ip_src_Receptor_tc
    USE ENTITY work.PN_genera_ip_src_Receptor_tc(rtl);

  FOR ALL : PN_genera_ip_src_Raised_Cosine_Receive_Filter
    USE ENTITY work.PN_genera_ip_src_Raised_Cosine_Receive_Filter(rtl);

  FOR ALL : PN_genera_ip_src_Raised_Cosine_Receive_Filter1
    USE ENTITY work.PN_genera_ip_src_Raised_Cosine_Receive_Filter1(rtl);

  FOR ALL : PN_genera_ip_src_BPSK_Demodulator_Baseband
    USE ENTITY work.PN_genera_ip_src_BPSK_Demodulator_Baseband(rtl);

  -- Signals
  SIGNAL enb_1_1_1                        : std_logic;
  SIGNAL enb_1_16_1                       : std_logic;
  SIGNAL filtered                         : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL filtered_1                       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL BPSK_Demodulator_Baseband_out1   : std_logic;  -- ufix1
  SIGNAL Data_Type_Conversion_out1        : std_logic;

BEGIN
  u_Receptor_tc : PN_genera_ip_src_Receptor_tc
    PORT MAP( clk => clk,
              reset => reset,
              clk_enable => clk_enable,
              enb_1_1_1 => enb_1_1_1,
              enb_1_16_1 => enb_1_16_1
              );

  u_Raised_Cosine_Receive_Filter : PN_genera_ip_src_Raised_Cosine_Receive_Filter
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_1_1 => enb_1_1_1,
              In1 => real_rsvd,  -- sfix16_En15
              Out1 => filtered  -- sfix16_En15
              );

  u_Raised_Cosine_Receive_Filter1 : PN_genera_ip_src_Raised_Cosine_Receive_Filter1
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_1_1 => enb_1_1_1,
              In1 => imaginary,  -- sfix16_En15
              Out1 => filtered_1  -- sfix16_En15
              );

  u_BPSK_Demodulator_Baseband : PN_genera_ip_src_BPSK_Demodulator_Baseband
    PORT MAP( in0_re => filtered,  -- sfix16_En15
              in0_im => filtered_1,  -- sfix16_En15
              out0 => BPSK_Demodulator_Baseband_out1  -- ufix1
              );

  
  Data_Type_Conversion_out1 <= '1' WHEN BPSK_Demodulator_Baseband_out1 /= '0' ELSE
      '0';

  ce_out <= enb_1_16_1;

  Salida_bits <= Data_Type_Conversion_out1;

END rtl;

